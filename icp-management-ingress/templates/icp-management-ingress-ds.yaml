---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ .Values.ingress.name }}
  labels:
    app: {{ .Values.ingress.name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Values.ingress.name }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  minReadySeconds: 0
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.ingress.name }}
        component: {{ .Values.ingress.name }}
        release: {{ .Release.Name }}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - env:
            - name: CLUSTER_DOMAIN
              value: {{ .Values.ingress.cluster_domain }}
            - name: WLP_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ingress.oidc_secret }}
                  key: WLP_CLIENT_ID
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: "{{ .Values.ingress.image.repository }}:{{ .Values.ingress.image.tag }}"
          ports:
            - containerPort: 8080
              hostPort: 8080
            - containerPort: 8443
              hostPort: 8443
          command: ["/icp_management_ingress"]
          imagePullPolicy: {{ .Values.ingress.image.pullPolicy }}
          name: icp-management-ingress
          volumeMounts:
            - mountPath: "/opt/ibm/router/nginx/html/dcos-metadata"
              name: router-ui-config
      volumes:
        - name: router-ui-config
          configMap:
            name: router-ui-config
      resources:
{{ toYaml .Values.ingress.resources | indent 10 }}
    {{- if .Values.ingress.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.ingress.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.ingress.tolerations }}
      tolerations:
{{ toYaml .Values.ingress.tolerations | indent 8 }}
    {{- end }}
